{
  "id": "mr-review-workflow",
  "name": "Adaptive MR Review Workflow",
  "version": "0.2.0",
  "description": "An adaptive workflow to guide an AI agent in performing a comprehensive code review. It adjusts its rigor based on MR complexity and includes checkpoints for architectural and self-critique to provide deep, actionable feedback.",
  "preconditions": [
    "User has the full code diff accessible (e.g., as text in a file).",
    "User has the MR title, purpose, and any relevant ticket numbers.",
    "The agent has access to file-reading tools."
  ],
  "metaGuidance": [
    "The ultimate goal is to assist, not replace, a human reviewer. The human owns the final merge decision.",
    "All feedback should be constructive and actionable. Explain the 'why' behind suggestions.",
    "The goal is continuous improvement, not perfection. Approve changes that are 'better' to maintain velocity.",
    "Foster a blameless culture of collective ownership. The code is a shared asset.",
    "Use prefixes like 'Nit:' for non-blocking, minor suggestions to keep focus on important issues.",
    "Embrace small, single-purpose pull requests for faster, more thorough reviews.",
    "When citing issues, always try to provide specific file paths and line numbers from the diff.",
    "Maintain the persona of a helpful, collaborative senior engineer.",
    "If at any point you determine that a crucial piece of information is missing, you must pause and ask the user to provide it."
  ],
  "steps": [
    {
      "id": "phase-0-triage",
      "title": "Phase 0: Triage & Review Focus",
      "prompt": "To begin the Merge Request review, please provide the full context below and classify the MR's complexity. This will tailor the depth of the review.\n\n**1. MR Context:**\n* **MR Title/Purpose:** [User provides the title and a brief description of its purpose.]\n* **Related Ticket(s):** [User provides ticket numbers or links.]\n* **Key Requirements/Acceptance Criteria:** [User lists key requirements from the ticket(s).]\n\n**2. Code Diff:**\n[User pastes the full `git diff` output or provides a path to a file containing the diff.]\n\n**3. Complexity Classification & Focus:**\n* **Classification:** Please choose one: **[Trivial]**, **[Standard]**, or **[High-Risk]**.\n* **PR Size:** Is this a small, focused change (<400 lines)? If not, does it have a single, clear purpose?\n* **Areas of Focus (Optional):** Are there specific areas you want me to pay close attention to? (e.g., 'performance implications', 'API design', 'data integrity').",
      "agentRole": "You are a code review coordinator and triage specialist with expertise in assessing merge request complexity and risk. Your role is to efficiently classify reviews and establish appropriate focus areas to ensure the right level of scrutiny for each change.",
      "guidance": [
        "**[Trivial]:** For minor fixes (typos, docs). This will run a condensed, single-phase review.",
        "**[Standard]:** For typical features or bug fixes. This uses the full, multi-phase review process.",
        "**[High-Risk]:** For major architectural changes or features touching sensitive code. This follows the full process with maximum diligence."
      ]
    },
    {
      "id": "phase-1-context",
      "title": "Phase 1: Contextual Understanding & Confirmation",
      "prompt": "My goal is to ensure I fully understand the MR before the deep analysis. Based on the context you provided, I will perform the following tasks:\n\n1.  **Summarize Goal:** Briefly summarize what I understand to be the primary goal and scope of this MR.\n2.  **File Overview:** List all changed files (added, modified, deleted) and provide a one-sentence summary of the changes for each.\n3.  **Initial Questions:** Formulate any immediate questions I have about the MR's purpose or requirements.\n4.  **Confirmation Gate:** Does my summary accurately reflect the MR's goal? Please confirm before I proceed.",
      "agentRole": "You are a thorough code review analyst specializing in requirement comprehension and change impact assessment. Your strength is quickly understanding the intent and scope of code changes while identifying potential gaps in understanding early in the review process.",
      "guidance": [
        "This is a critical sanity check. If the agent's summary is incorrect, correct it now to prevent a flawed review. This step is skipped for 'Trivial' reviews."
      ],
      "runCondition": { "var": "complexity", "not_equals": "Trivial" },
      "requireConfirmation": true
    },
    {
      "id": "phase-1-context-setup",
      "title": "Phase 1: Initializing Analysis State",
      "prompt": "Initializing state for progressive depth analysis. Setting analysisDepth = 1, analysisComplete = false, and majorIssuesFound = false.",
      "agentRole": "You are a state manager preparing the workflow for an iterative review process.",
      "guidance": ["This is an automated step to prepare for the analysis loop."],
      "runCondition": { "var": "complexity", "not_equals": "Trivial" }
    },
    {
      "id": "phase-1a-llm-context-gathering",
      "title": "Phase 1a: Comprehensive Context Gathering",
      "prompt": "To perform a thorough review, I need more than just the code diff. Please provide the following:\n\n1. **Business Context:** Paste the full text of the associated Jira/GitHub ticket, including the requirements and acceptance criteria. This helps me validate the 'why' behind the change.\n2. **Technical Context:** If this change relies on other parts of the codebase, please provide the relevant code snippets or file contents. Also, include any relevant architectural diagrams or coding standards documents.\n\nI will synthesize this information to build a comprehensive context for my review.",
      "agentRole": "You are a context-aware analyst ensuring you have all necessary information before starting a deep review.",
      "guidance": ["A high-quality review depends on high-quality context. The more information provided here, the more accurate the review will be."],
      "runCondition": { "var": "complexity", "not_equals": "Trivial" },
      "requireConfirmation": true
    },
    {
      "id": "phase-2-depth-analysis-loop",
      "type": "loop",
      "title": "Phase 2: Progressive Depth Analysis",
      "runCondition": { "var": "complexity", "not_equals": "Trivial" },
      "loop": {
        "type": "until",
        "condition": { "var": "analysisComplete", "equals": true },
        "maxIterations": 3,
        "iterationVar": "analysisDepth"
      },
      "body": [
        {
          "id": "perform-analysis-pass",
          "title": "Analysis Pass {{analysisDepth}} of 3",
          "prompt": "Act as a Senior Staff Engineer. Your task is to review the code based on the checklist for the current analysis depth. Think step-by-step.\n\n**Current Depth: {{analysisDepth}}**\n\n**Checklist:**\n* **Depth 1 (Basic Scan):** Check for style guide violations, simple bugs (e.g., typos, unused variables), and common security vulnerabilities (OWASP Top 10).\n* **Depth 2 (Standard Review):** Check for logical errors, edge cases, adherence to SOLID principles, and maintainability issues.\n* **Depth 3 (Deep Architectural Review):** Check for alignment with system architecture, long-term impact, performance bottlenecks, and dependency risks.\n\n**Instructions:**\n1.  **Summarize Focus:** State which depth level you are on and what you will focus on.\n2.  **Analyze:** Perform the review based on the checklist for depth {{analysisDepth}}.\n3.  **List Findings:** Document your findings, categorizing them as 'Critical', 'Major', or 'Minor'.\n4.  **Set Flag:** If you find any 'Critical' or 'Major' issues, set the context variable `majorIssuesFound = true`.",
          "agentRole": "You are a Senior Staff Engineer performing a structured, multi-pass code review with increasing levels of scrutiny.",
          "guidance": [
            "At each depth, focus only on the items in that checklist.",
            "Use Chain-of-Thought reasoning to explain your findings."
          ]
        },
        {
          "id": "check-analysis-completion",
          "title": "Check Analysis Completion",
          "prompt": "Checking if the analysis is complete. If no 'Major' or 'Critical' issues were found in the last pass, or if we have reached the maximum depth (3), I will set `analysisComplete = true` to exit the loop. Otherwise, I will increment the `analysisDepth` and continue to the next level of review.",
          "agentRole": "You are an automated process controller determining whether to deepen the analysis or conclude this phase.",
          "guidance": ["This step determines the exit condition for the progressive depth loop."]
        }
      ]
    },
    {
      "id": "phase-3-impact-analysis",
      "title": "Phase 3: Testing, Documentation & Impact Analysis",
      "prompt": "My goal is to assess the secondary impacts of this change.\n\n1.  **Testing:** Based on the code changes, what tests would be expected (unit, integration, etc.)? Are new tests included? Are existing tests updated? Are there obvious gaps in test coverage for the new logic?\n2.  **Documentation:** Is new or complex logic adequately commented? Could any external documentation (e.g., READMEs) be affected by this change?\n3.  **Breaking Changes:** Are there any changes that could break backward compatibility for APIs or other parts of the codebase?",
      "agentRole": "You are a software quality engineer specializing in testing strategy and impact analysis. Your expertise includes identifying testing gaps, documentation requirements, and potential breaking changes that could affect system stability or user experience.",
      "guidance": [
        "Assessing test coverage is critical. A lack of tests for new logic is often a 'Major' or 'Critical' concern."
      ],
      "runCondition": { "var": "complexity", "not_equals": "Trivial" }
    },
    {
      "id": "phase-4-refinement-loop",
      "type": "loop",
      "title": "Phase 4: Iterative Summary & Refinement",
      "runCondition": { "var": "complexity", "not_equals": "Trivial" },
      "loop": {
        "type": "until",
        "condition": { "var": "critiqueComplete", "equals": true },
        "maxIterations": 2,
        "iterationVar": "critiquePass"
      },
      "body": [
        {
          "id": "generate-summary-and-critique",
          "title": "Generate Summary & Self-Critique (Pass {{critiquePass}})",
          "prompt": "Consolidate all findings into a final, actionable report.\n\n**1. Devil's Advocate Self-Critique:**\nReview your own findings. Are any of your 'Major' concerns actually minor preferences? Is there a pattern among 'Minor' suggestions that points to a larger problem? Does this critique reveal a fundamental flaw in your analysis that requires another pass?\n\n**2. Final Report:**\n* **Overall Assessment:** A 2-3 sentence summary.\n* **Key Positive Aspects:** Highlights of what was done well.\n* **Concerns (Categorized):** Critical, Major, and Minor/Nit.\n* **Questions for Author:** Clarifying questions.\n* **Actionable Recommendations:** Concrete suggestions.\n\n**3. Set Flag:** Based on your self-critique, set `critiqueComplete = true` if the summary is robust, or `critiqueComplete = false` if you need one more pass to refine it.",
          "agentRole": "You are a facilitator synthesizing feedback and performing a self-critique to ensure the final report is balanced and high-quality.",
          "guidance": ["Use 'Nit:' for minor issues. Balance criticism with praise. The goal is a collaborative and constructive report."]
        }
      ]
    },
    {
      "id": "phase-5-trivial-review-summary",
      "title": "Phase 5: Trivial Review Summary",
      "prompt": "Based on the trivial nature of this MR, I have performed a quick check for obvious errors. The change appears to correctly address the stated purpose without any clear side effects. I recommend approval.",
      "agentRole": "You are an efficient code reviewer specializing in rapid assessment of low-risk changes. Your role is to quickly validate that trivial changes are safe and appropriate while avoiding over-analysis of simple modifications.",
      "guidance": [
        "This is the condensed summary for 'Trivial' reviews. The agent skips all other analytical steps and provides a simple confirmation for straightforward changes."
      ],
      "runCondition": { "var": "complexity", "equals": "Trivial" }
    }
  ]
} 