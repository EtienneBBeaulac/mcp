# Workflow Orchestration System Docker Compose
# Local development environment

version: '3.8'

services:
  # Main application service
  workrail:
    build:
      context: .
      target: development
    container_name: workrail-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
      - WORKFLOW_STORAGE_PATH=/app/workflows
      - LOG_LEVEL=debug
      - DEBUG=true
      - HOT_RELOAD=true
    volumes:
      # Mount source code for hot reloading
      - ./src:/app/src
      - ./tests:/app/tests
      - ./workflows:/app/workflows
      - ./config:/app/config
      # Mount node_modules to avoid conflicts
      - /app/node_modules
    networks:
      - workflow-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis service for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: workflow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - workflow-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL service for persistent storage (optional)
  postgres:
    image: postgres:15-alpine
    container_name: workflow-postgres
    environment:
      POSTGRES_DB: workflow_db
      POSTGRES_USER: workflow_user
      POSTGRES_PASSWORD: workflow_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - workflow-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U workflow_user -d workflow_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: workflow-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - workrail
    networks:
      - workflow-network
    restart: unless-stopped

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local

networks:
  workflow-network:
    driver: bridge 